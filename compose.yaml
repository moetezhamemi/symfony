services:
  php:
    build:
      context: .  # Utilise le répertoire actuel où se trouve le Dockerfile
      dockerfile: Dockerfile  # Nom du fichier Dockerfile
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      DATABASE_URL: postgresql://app:password@database:5432/app?serverVersion=16&charset=utf8
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}:${HTTPS_PORT:-443}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - protocol: tcp
        published: 80
        target: 80
      - protocol: tcp
        published: 443
        target: 443
      - protocol: udp
        published: 443
        target: 443
    depends_on:
      database:
        condition: service_healthy  # Attend que la base de données soit prête

  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: password
    ports:
      - "5439:5432"  # Ensure this line is correct and not commented out
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "app", "-U", "app"]
      timeout: 5s
      retries: 5
      start_period: 60s

volumes:
  caddy_data:
  caddy_config:
  database_data: